import { SchemaColumnValidatorTypes } from "@d19n/models/dist/schema-manager/schema/column/validator/schema.column.validator.types";
import { SchemaColumnCreateUpdateDto } from "@d19n/models/dist/schema-manager/schema/column/dto/schema.column.create.update.dto";
import { SchemaColumnTypes } from "@d19n/models/dist/schema-manager/schema/column/types/schema.column.types";

export const columns: SchemaColumnCreateUpdateDto[] = [
    {
        name: 'Name',
        label: 'name',
        description: 'easy to identify name',
        type: SchemaColumnTypes.TEXT,
        position: 0,
        isStatic: true,
        isHidden: false,
        isTitleColumn: true,
        validators: [
            SchemaColumnValidatorTypes.REQUIRED.name,
            SchemaColumnValidatorTypes.UNIQUE.name,
        ],
    },
    {
        name: 'Description',
        label: 'description',
        description: 'description of the schedule',
        type: SchemaColumnTypes.TEXT,
        position: 1,
        isStatic: true,
        isHidden: false,
        isTitleColumn: false,
        validators: [ SchemaColumnValidatorTypes.TEXT.name ],
    },
    {
        name: 'LowerBound',
        label: 'lower bound',
        description: 'the lowest quantity of usage for the consumption rate',
        type: SchemaColumnTypes.NUMBER,
        position: 2,
        isStatic: true,
        isHidden: false,
        isTitleColumn: false,
        validators: [ SchemaColumnValidatorTypes.REQUIRED.name, SchemaColumnValidatorTypes.NUMBER.name ],
    },
    {
        name: 'UpperBound',
        label: 'upper bound',
        description: 'the highest quantity of usage for the consumption rate',
        type: SchemaColumnTypes.NUMBER,
        position: 3,
        isStatic: true,
        isHidden: false,
        isTitleColumn: false,
        validators: [ SchemaColumnValidatorTypes.REQUIRED.name, SchemaColumnValidatorTypes.NUMBER.name ],
    },
    {
        name: 'Price',
        label: 'price',
        description: 'the price for usage that falls within the consumption rates bounds',
        type: SchemaColumnTypes.CURRENCY,
        position: 4,
        isStatic: true,
        isHidden: false,
        isTitleColumn: false,
        validators: [ SchemaColumnValidatorTypes.REQUIRED.name, SchemaColumnValidatorTypes.NUMBER_CURRENCY.name ],
    },
    {
        name: 'PricingMethod',
        label: 'pricing method',
        description: 'Per unit or flat fee',
        type: SchemaColumnTypes.ENUM,
        position: 5,
        isStatic: true,
        isHidden: false,
        isTitleColumn: false,
        options: [
            { label: 'Per unit', value: 'PER_UNIT', position: 0 },
            { label: 'Flat fee', value: 'FLAT_FEE', position: 1 },
        ],
        validators: [
            SchemaColumnValidatorTypes.REQUIRED.name,
        ],
    },
    {
        name: 'TaxRate',
        description: 'tax rate for the product',
        type: SchemaColumnTypes.NUMBER,
        position: 18,
        isStatic: true,
        isHidden: false,
        isTitleColumn: false,
        defaultValue: 0,
        validators: [ 'REQUIRED' ],
    },
    {
        name: 'Taxable',
        description: 'is the product taxable',
        type: SchemaColumnTypes.ENUM,
        position: 19,
        isStatic: true,
        isHidden: false,
        isTitleColumn: false,
        defaultValue: 'YES',
        options: [
            { label: 'Yes', value: 'YES', position: 0 },
            { label: 'No', value: 'NO', position: 1 },
        ],
        validators: [ 'REQUIRED' ],
    },
];

